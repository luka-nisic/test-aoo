name: GitHub Local
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify the release version (e.g., v1.0.0)'
        required: true
        default: 'dev'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Python (if needed for your application)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Install dependencies (skip if not using Python)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Set Version, Git SHA, and Build Time
      - name: Set Version, Git SHA, and Build Time
        id: vars
        run: |
          VERSION=${{ github.event.inputs.version }}
          GIT_SHA=$(git rev-parse --short HEAD)
          BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)

          echo "APP_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_ENV
          echo "BUILD_TIME=${BUILD_TIME}" >> $GITHUB_ENV

      # Build Docker image with versioning info
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg APP_VERSION=${APP_VERSION:-latest} \
            --build-arg GIT_SHA=d858a4a \
            --build-arg BUILD_TIME=2025-08-28T17:35:45Z \
            -t ghcr.io/${{ github.repository_owner }}/myapp:${{ env.APP_VERSION }} .

      # Log in to GitHub Container Registry using GITHUB_TOKEN
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Push Docker Image to GitHub Container Registry
      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/myapp:${{ env.APP_VERSION }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Create GitHub Release
      - name: Create GitHub Release
        run: |
          gh release create ${{ env.APP_VERSION }} --title "Release ${{ env.APP_VERSION }}" --notes "Release notes for version ${{ env.APP_VERSION }}"

      # Tag and push the release version to GitHub
      - name: Tag and Push Release Version to GitHub
        run: |
          git tag ${{ env.APP_VERSION }}
          git push origin ${{ env.APP_VERSION }}
